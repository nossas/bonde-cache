pipeline:
  tests:
    image: golang
    commands:
      - go get -u github.com/golang/dep/cmd/dep
      - cp -R . /go/src/app && cd /go/src/app && dep ensure
      - go build
      - go test -v -cover
    when:
      event: [push, tag]
  publish-docker-staging:
    image: plugins/docker
    repo: nossas/bonde-cache
    secrets: [ docker_username, docker_password ]
    tags:
      - ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  deployment-rancher-staging:
    image: peloton/drone-rancher
    url: http://cluster.bonde.org
    service: staging/cache
    docker_image: nossas/bonde-cache:${DRONE_BRANCH}
    timeout: 360
    confirm: true
    secrets: [ rancher_access_key, rancher_secret_key ]
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  publish:
    image: plugins/docker
    repo: nossas/bonde-cache
    secrets: [ docker_username, docker_password ]
    tags:
      - ${DRONE_TAG}
    when:
      status: success
      event: tag
  deployment:
    image: appleboy/drone-ssh
    host: cache.bonde.org
    username: ubuntu
    port: 22
    secrets: [ ssh_key ]
    script:
      - cd ~/bonde-cache
      - sudo docker pull nossas/bonde-cache:${DRONE_TAG}
      - sudo docker stop bonde-cache-app
      - sudo docker run -it --rm -p 443:443 -p 80:80 -v "$PWD":/go/src/app -w /go/src/app -e PORT=80 -e CACHE_PORT=80 -e CACHE_PORTSSL=443 -e CACHE_DEV=false -e CACHE_INTERVAL=60 -e CACHE_RESET=false -e CACHE_APIURL=https://api.bonde.org --name bonde-cache-app -d nossas/bonde-cache:${DRONE_TAG}
      - sudo docker start bonde-cache-app
      - sudo docker logs bonde-cache-app
    when:
      status: success
      event: tag
  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: bonde_bots
    username: CI - ${DRONE_REPO_NAME}
    when:
      status: [ success, failure ]
